nest-project/
├── 📁 src/
│   ├── 📄 main.ts                         # Ponto de entrada da aplicação
│   ├── 📄 app.module.ts                   # Módulo raiz
│   ├── 📁 common/                         # Recursos compartilhados globalmente
│   │   ├── 📁 filters/                    # Exception filters
│   │   │   └── all-exceptions.filter.ts
│   │   ├── 📁 guards/                     # Authentication guards
│   │   │   └── jwt-auth.guard.ts
│   │   ├── 📁 interceptors/               # Interceptors
│   │   │   ├── logging.interceptor.ts
│   │   │   └── transform.interceptor.ts
│   │   ├── 📁 decorators/                 # Custom decorators
│   │   │   ├── roles.decorator.ts
│   │   │   └── user.decorator.ts
│   │   ├── 📁 middleware/                 # Middleware
│   │   │   └── logger.middleware.ts
│   │   ├── 📁 pipes/                      # Custom pipes
│   │   │   └── parse-int.pipe.ts
│   │   └── 📁 utils/                      # Utilitários
│   │       └── helpers.ts
│   ├── 📁 config/                         # Configurações da aplicação
│   │   ├── 📄 configuration.ts            # Configuração principal
│   │   ├── 📄 database.config.ts          # Configuração de database
│   │   └── 📄 swagger.config.ts           # Configuração do Swagger
│   ├── 📁 core/                           # Módulos e serviços centrais
│   │   ├── 📄 core.module.ts
│   │   ├── 📁 logger/                     # Serviço de logging
│   │   │   ├── 📄 logger.service.ts
│   │   │   └── 📄 logger.module.ts
│   │   └── 📁 cache/                      # Serviço de cache
│   │       ├── 📄 cache.service.ts
│   │       └── 📄 cache.module.ts
│   ├── 📁 modules/                        # Módulos de funcionalidades
│   │   ├── 📁 auth/                       # Módulo de autenticação
│   │   │   ├── 📄 auth.module.ts
│   │   │   ├── 📄 auth.controller.ts
│   │   │   ├── 📄 auth.service.ts
│   │   │   ├── 📄 strategies/             # Estratégias de autenticação
│   │   │   │   ├── 📄 jwt.strategy.ts
│   │   │   │   └── 📄 local.strategy.ts
│   │   │   ├── 📁 dto/                    # Data Transfer Objects
│   │   │   │   ├── 📄 login.dto.ts
│   │   │   │   └── 📄 register.dto.ts
│   │   │   ├── 📁 entities/               # Entidades (se usando TypeORM)
│   │   │   │   └── 📄 user.entity.ts
│   │   │   ├── 📁 interfaces/             # Interfaces TypeScript
│   │   │   │   └── 📄 token-payload.interface.ts
│   │   │   └── 📁 __tests__/              # Testes do módulo
│   │   │       ├── 📄 auth.controller.spec.ts
│   │   │       └── 📄 auth.service.spec.ts
│   │   ├── 📁 users/                      # Módulo de usuários
│   │   │   ├── 📄 users.module.ts
│   │   │   ├── 📄 users.controller.ts
│   │   │   ├── 📄 users.service.ts
│   │   │   ├── 📁 dto/
│   │   │   │   ├── 📄 create-user.dto.ts
│   │   │   │   └── 📄 update-user.dto.ts
│   │   │   ├── 📁 entities/
│   │   │   │   └── 📄 user.entity.ts
│   │   │   └── 📁 __tests__/
│   │   │       ├── 📄 users.controller.spec.ts
│   │   │       └── 📄 users.service.spec.ts
│   │   └── 📁 products/                   # Módulo de produtos
│   │       └── ...                        # Estrutura similar
│   └── 📁 shared/                         # Módulos compartilhados entre features
│       ├── 📁 database/                   # Módulo de banco de dados
│       │   ├── 📄 database.module.ts
│       │   ├── 📄 database.service.ts
│       │   └── 📄 entities/               # Entidades compartilhadas
│       │       └── 📄 base.entity.ts
│       └── 📁 api/                        # Clientes de API externos
│           ├── 📄 payment-api.service.ts
│           └── 📄 payment-api.module.ts/                    # Código fonte da aplicação (estrutura varia por arquitetura)
├── 📁 test/                   # Testes e2e e de integração
├── 📁 dist/                   # Código compilado (gerado automaticamente)
├── 📁 node_modules/           # Dependências do projeto
├── 📄 .eslintrc.js           # Configuração do ESLint
├── 📄 .prettierrc            # Configuração do Prettier
├── 📄 .gitignore             # Arquivos ignorados pelo git
├── 📄 nest-cli.json          # Configuração do Nest CLI
├── 📄 package.json           # Dependências e scripts
├── 📄 tsconfig.build.json    # Configuração de build do TypeScript
├── 📄 tsconfig.json          # Configuração do TypeScript
├── 📄 README.md              # Documentação do projeto
├── 📄 docker-compose.yml     # Orquestração de containers (opcional)
├── 📄 Dockerfile             # Configuração do Docker (opcional)
├── 📄 .env                   # Variáveis de ambiente (não versionado)
└── 📄 .env.example           # Exemplo de variáveis de ambiente

